services:
  backend:
    container_name: backend
    build:
      context: ./requirements/backend
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    networks:
      - ft_transcendence
    expose:
      - 8000
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m
      timeout: 10s
      retries: 5

  frontend:
    container_name: frontend
    build:
      context: ./requirements/frontend
      dockerfile: Dockerfile
    networks:
      - ft_transcendence
    volumes:
      - frontend_build:/usr/src/app/dist
    restart: "no"
    healthcheck:
      test: ["CMD", "test", "-f", "/usr/src/app/build/index.html"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend_build:/usr/share/nginx/html
    networks:
      - ft_transcendence
    depends_on:
      - frontend
    secrets:
      - ssl_certificate
      - ssl_certificate_key
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 30s
      retries: 5

# prom/graf
  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - ft_transcendence

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - ft_transcendence
  #   depends_on:
  #     - prometheus
# =========

networks:
  ft_transcendence:
    driver: bridge

volumes:
  frontend_build:

secrets:
  ssl_certificate:
    file: ../secrets/ssl/certificate.crt
  ssl_certificate_key:
    file: ../secrets/ssl/certificate.key
