services:
  backend:
    container_name: backend
    build:
      context: ./requirements/backend
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    networks:
      - ft_transcendence
    expose:
      - 8000
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m
      timeout: 10s
      retries: 5

  frontend:
    container_name: frontend
    build:
      context: ./requirements/frontend
      dockerfile: Dockerfile
    networks:
      - ft_transcendence
    volumes:
      - frontend_build:/usr/src/app/dist
    restart: "no"
    healthcheck:
      test: ["CMD", "test", "-f", "/usr/src/app/build/index.html"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  nginx:
    container_name: nginx-modsecurity
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
    volumes:
      - frontend_build:/usr/share/nginx/html
    networks:
      - ft_transcendence
    depends_on:
      - frontend
    secrets:
      - ssl_certificate
      - ssl_certificate_key
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 30s
      retries: 5

  alertmanager:
    container_name: alertmanager
    restart: always
    build:
      context: ./requirements/monitoring/alertmanager
      dockerfile: Dockerfile
      args:
        - SMTP_TO=${SMTP_TO}
        - SMTP_FROM=${SMTP_FROM}
        - SMTP_SMARTHOST=${SMTP_SMARTHOST}
        - SMTP_AUTH_USERNAME=${SMTP_AUTH_USERNAME}
        - SMTP_AUTH_IDENTITY=${SMTP_AUTH_IDENTITY}
        - SMTP_AUTH_PASSWORD=${SMTP_AUTH_PASSWORD}
    volumes:
      - ./requirements/monitoring/alertmanager/data:/alertmanager/data
    networks:
      - ft_transcendence
    ports:
      - '9093:9093'
    depends_on:
      - prometheus

  cadvisor:
      container_name: cadvisor
      restart: always
      privileged: true
      build:
        context: ./requirements/monitoring/exporters/cadvisor
        dockerfile: Dockerfile
      volumes:
        - /:/rootfs:ro
        - /var/run/docker.sock:/var/run/docker.sock:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
      ports:
        - "8080:8080"
      networks:
        - ft_transcendence

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.listen-address=:9090'
    ports:
      - "9090:9090"
    volumes:
      - ./requirements/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
      - ./requirements/monitoring/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
    networks:
      - ft_transcendence
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./requirements/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./requirements/monitoring/grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
      - ./ssl:/etc/grafana/ssl:ro
    environment:
      - GF_SERVER_PROTOCOL=https
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/dashboards/cadvisor.json
      - GF_METRICS_ENABLED=true
      - GF_AUTH_DISABLE_LOGIN_FORM=false
    networks:
      - ft_transcendence
    restart: unless-stopped
    depends_on:
      - prometheus

  nginx-exporter:
    container_name: nginx-exporter
    build:
      context: ./requirements/monitoring/exporters/nginx-exporter
      dockerfile: Dockerfile
    ports:
      - "9113:9113"
    networks:
      - ft_transcendence
    depends_on:
      - nginx
    restart: unless-stopped

  node-exporter:
    container_name: node-exporter
    build:
      context: ./requirements/monitoring/exporters/node-exporter
      dockerfile: Dockerfile
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - ft_transcendence
    restart: unless-stopped

networks:
  ft_transcendence:
    driver: bridge

volumes:
  frontend_build:
  prometheus_data:
  grafana_data:

secrets:
  ssl_certificate:
    file: ../secrets/ssl/certificate.crt
  ssl_certificate_key:
    file: ../secrets/ssl/certificate.key
