services:
  backend:
    container_name: backend
    build:
      context: ./requirements/backend
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    networks:
      - ft_transcendence
    expose:
      - 8000
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m
      timeout: 10s
      retries: 5

  frontend:
    container_name: frontend
    build:
      context: ./requirements/frontend
      dockerfile: Dockerfile
    networks:
      - ft_transcendence
    volumes:
      - frontend_build:/usr/src/app/dist
    restart: "no"
    healthcheck:
      test: ["CMD", "test", "-f", "/usr/src/app/build/index.html"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  nginx:
    container_name: nginx-modsecurity
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend_build:/usr/share/nginx/html
    networks:
      - ft_transcendence
    depends_on:
      - frontend
    secrets:
      - ssl_certificate
      - ssl_certificate_key
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 30s
      retries: 5

  cadvisor:
      image: gcr.io/cadvisor/cadvisor:v0.47.2
      container_name: cadvisor
      privileged: true
      devices:
        - /dev/kmsg:/dev/kmsg
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
      ports:
        - "8080:8080"
      networks:
        - ft_transcendence
      restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - ft_transcendence
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - ft_transcendence
    restart: unless-stopped

networks:
  ft_transcendence:
    driver: bridge

volumes:
  frontend_build:

secrets:
  ssl_certificate:
    file: ../secrets/ssl/certificate.crt
  ssl_certificate_key:
    file: ../secrets/ssl/certificate.key
